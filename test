local mod = DiesIraeMod
local sfx = SFXManager()
local game = Game()
local myBeggar = Isaac.GetEntityVariantByName("Fiend Beggar")
local Fragile = require("scripts.effects.fragile")

function mod:FiendBeggarUpdate(beggar)
    local sprite = beggar:GetSprite()
    local data = beggar:GetData()
    local player = Isaac.GetPlayer(0)

    if data.HasTriggered then
        if sprite:IsFinished("PayPrize") then
            sprite:Play("Teleport", true)
        elseif sprite:IsFinished("Teleport") then
            beggar:Remove()
        end
        return
    end

    if player and player.Position:Distance(beggar.Position) < 35 then
        Fragile.ApplyFragile(player)
        sfx:Play(SoundEffect.SOUND_SATAN_GROW)
        sprite:Play("PayPrize", true)
        data.HasTriggered = true
    end
end

mod:AddCallback(ModCallbacks.MC_POST_SLOT_UPDATE, mod.FiendBeggarUpdate, myBeggar)

function mod:FiendBeggarExploded(beggar)
    local player = Isaac.GetPlayer(0)
    if player then
        player:TakeDamage(2, DamageFlag.DAMAGE_EXPLOSION, EntityRef(beggar), 0)
    end

    sfx:Play(SoundEffect.SOUND_MEATY_DEATHS)
    game:SpawnParticles(beggar.Position, EffectVariant.BLOOD_EXPLOSION, 1, 3, Color.Default)
    Isaac.Spawn(EntityType.ENTITY_EFFECT, EffectVariant.BLOOD_SPLAT, 0, beggar.Position, Vector.Zero, beggar)
    beggar:Remove()
    return false
end
mod:AddCallback(ModCallbacks.MC_PRE_SLOT_CREATE_EXPLOSION_DROPS, mod.FiendBeggarExploded, myBeggar)

function mod:OnNewFloor()
    for i = 0, game:GetNumPlayers() - 1 do
        local player = Isaac.GetPlayer(i)
        local data = player:GetData()
        if data.IsFragile then
            data.IsFragile = false
        end
    end
end
mod:AddCallback(ModCallbacks.MC_POST_NEW_LEVEL, mod.OnNewFloor)