local mod = DiesIraeMod
local WanderingFamiliar = {}

function WanderingFamiliar:onCache(player, cacheFlag)
    if cacheFlag == CacheFlag.CACHE_FAMILIARS then
        local count = player:GetCollectibleNum(mod.Items.KillerQueen)
        player:CheckFamiliar(
            mod.EntityVariant.KillerQueen,
            count,
            RNG(),
            Isaac.GetItemConfig():GetCollectible(mod.Items.KillerQueen)
        )
    end
end

function WanderingFamiliar:onFamiliarInit(familiar)
    local rng = RNG()
    familiar:GetData().MoveDirection = Vector(rng:RandomFloat() * 2 - 1, rng:RandomFloat() * 2 - 1):Normalized()
    familiar.Velocity = familiar:GetData().MoveDirection * 1.5
end

function WanderingFamiliar:onFamiliarUpdate(familiar)
    local sprite = familiar:GetSprite()
    local rng = RNG()

    if not sprite:IsPlaying("Float") then
        sprite:Play("Float", true)
    end

    familiar.Velocity = familiar:GetData().MoveDirection * 1.5

    if rng:RandomInt(100) == 0 then
        familiar:GetData().MoveDirection = Vector(rng:RandomFloat() * 2 - 1, rng:RandomFloat() * 2 - 1):Normalized()
    end
end

mod:AddCallback(ModCallbacks.MC_EVALUATE_CACHE, WanderingFamiliar.onCache)
mod:AddCallback(ModCallbacks.MC_FAMILIAR_INIT, WanderingFamiliar.onFamiliarInit, mod.EntityVariant.KillerQueen)
mod:AddCallback(ModCallbacks.MC_FAMILIAR_UPDATE, WanderingFamiliar.onFamiliarUpdate, mod.EntityVariant.KillerQueen)
